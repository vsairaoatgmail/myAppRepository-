# -*- coding: utf-8 -*-
"""mL_with_train_test.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1IUAY8rrgnafwBKmc9kR0PyaN8Szs0-QN
"""

#!/usr/bin/python
from sklearn import tree
from sklearn import datasets
from sklearn.metrics import accuracy_score
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier

import numpy as np

  
  
# loading iris data set and printing them to view
iris = datasets.load_iris()
print (iris.feature_names)  # output: ['sepal length (cm)', 'sepal width (cm)', 'petal length (cm)', 'petal width (cm)']
print (iris.target_names)   # output: ['setosa' 'versicolor' 'virginica']
print (iris.data[0])  # input values of first record:  [5.1 3.5 1.4 0.2]
print (iris.target)   # basically flower types - 0, 1, 2 for 150 rows 
  
# to display all training data records - 150 records
# for i in range(len(iris.target)):
#  print ("example %d: label %s, features %s" %(i, iris.target[i], iris.data[i]))

X = iris.data
y = iris.target

# total 150 records training data, split half of the data as training data and rest of testing data  
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = .5)

my_classifier = tree.DecisionTreeClassifier()   # decision tree classifier
#my_classifier = KNeighborsClassifier()          # one type of classifier

my_classifier.fit(X_train, y_train)

predictions = my_classifier.predict(X_test)
  
print (accuracy_score(y_test, predictions))